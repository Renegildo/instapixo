// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider  = "postgresql"
   url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
   id       String    @id @default(uuid())
   username String    @unique
   password String
   bio      String    @default("")
   imageUrl String    @default("")
   posts    Post[]
   likes    Like[]
   comments Comment[]

   createdAt  DateTime @default(now())
   updatedAt  DateTime @updatedAt
   following  Follow[] @relation("following")
   followedBy Follow[] @relation("followedBy")
}

model Post {
   id       String    @id @default(uuid())
   ownerId  String
   owner    User      @relation(fields: [ownerId], references: [id])
   likes    Like[]
   content  String?
   imageUrl String?
   comments Comment[]

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Like {
   id      String @id @default(uuid())
   likerId String
   postId  String
   liker   User   @relation(fields: [likerId], references: [id])
   post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   @@unique([likerId, postId])
}

model Comment {
   id      String @id @default(uuid())
   postId  String
   ownerId String
   content String

   post  Post @relation(fields: [postId], references: [id], onDelete: Cascade)
   owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Follow {
   id          String @id @default(uuid())
   followerId  String
   followingId String

   follower  User @relation("following", fields: [followerId], references: [id])
   following User @relation("followedBy", fields: [followingId], references: [id])

   @@unique([followerId, followingId])
}
